# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def deleteMiddle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        prev = ListNode()
        temp = ListNode()
        i = 0
        count = 1
        temp = head
        while temp.next != None:
            count += 1
            temp = temp.next
        mid = int(count / 2)
        print(mid)
        i = 0
        temp = head
        while i < mid:
            prev = temp
            temp = temp.next
            i += 1
        if temp == head:
            head = head.next
            return head
        prev.next = temp.next
        temp.next = None
        del temp
        return head
