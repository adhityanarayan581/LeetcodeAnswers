# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def swapPairs(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if head == None:
            return None
        if head.next == None:
            return head
        temp1 = ListNode()
        temp2 = ListNode()
        temp3 = ListNode()
        temp1 = head
        temp2 = head.next
        head = temp2
        while temp1 != None and temp2 != None and temp3 != None:
            temp1.next = temp2.next
            temp2.next = temp1
            temp3 = temp1
            temp1 = temp1.next
            if temp1 == None or temp2 == None or temp3 == None:
                break
            if temp1.next != None:
                temp3.next = temp1.next
            temp2 = temp1.next
        return head
