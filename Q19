# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        temp = ListNode()
        prev = ListNode()
        temp = head
        count = 0
        if head.next == None:
            return None
        while(temp.next != None):
            count += 1
            temp = temp.next
        i = 0
        temp = head
        while i <= count - n:
            prev = temp
            temp = temp.next
            i += 1
        if head == temp:
            head = head.next
            return head
        prev.next = temp.next
        temp.next = None
        del temp
        return head
