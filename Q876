# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def middleNode(self, head: Optional[ListNode]) -> Optional[ListNode]:
        temp = ListNode()
        prev = ListNode()
        count = 0
        temp = head
        if head.next == None:
            return head
        count = 1
        while temp.next != None:
            count += 1
            temp = temp.next
        print(count)
        
        mid = int(count // 2) + 1
        print(mid)
        
        temp = head
        i = 0
        while i < mid - 1:
            temp = temp.next
            i += 1
        print(temp.val)
        head = temp
        return head
